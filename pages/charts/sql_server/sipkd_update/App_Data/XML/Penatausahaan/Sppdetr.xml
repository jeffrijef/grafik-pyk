<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Sppdetr" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Sppdetr" type="Usadi.Valid49.BO.SppdetrControl" />
  </alias>
  <resultMaps>
    <resultMap id="return-result" class="Sppdetr">
			<result property="Idxkode" column="IDXKODE"/>
			<result property="Type" column="TYPE"/>
			<result property="Kdpers" column="KDPERS"/>
			<result property="Nmper" column="NMPER"/>
			<result property="Kdper" column="KDPER"/>
      <result property="Nilai" column="NILAI"/>
      <result property="Nojetra" column="NOJETRA"/>
      <result property="Mtgkey" column="MTGKEY"/>
      <result property="Kdkegunit" column="KDKEGUNIT"/>
      <result property="Unitkey" column="UNITKEY"/>
      <result property="Nospp" column="NOSPP"/>
    </resultMap>
    <resultMap id="return-result-del" class="Sppdetr">
      <result property="Mtgkey" column="MTGKEY"/>
    </resultMap>
		<resultMap id="return-result-tree" class="Sppdetr">
			<result property="Unitkey" column="UNITKEY"/>
			<result property="Nospp" column="NOSPP"/>
      <result property="Nuprgrm" column="NUPRGRM"/>
      <result property="Kdkegunit" column="KDKEGUNIT"/>
			<result property="Kdper" column="KDPER"/>
			<result property="Nmper" column="NMPER"/>
			<result property="Nilai" column="NILAI"/>
			<result property="Type" column="TYPE"/>
		</resultMap>
    <resultMap id="return-result-total" class="Sppdetr">
      <result property="Mtgkey" column="MTGKEY"/>
      <result property="Nilai" column="NILAI"/>
    </resultMap>
    <resultMap id="return-result-total-unit" class="Sppdetr">
      <result property="Unitkey" column="UNITKEY"/>
      <result property="Nilai" column="NILAI"/>
    </resultMap>
    <!--<resultMap id="return-result-totba" class="Sppdetr">
      <result property="Sisaba" column="SISABA"/>
    </resultMap>-->
  </resultMaps>
  <statements>
    <insert id="InsertSppdetr" parameterMap="insert-param">
      <generate table="SPPDETR"/>
    </insert>
    <update id="UpdateBySppdetr" parameterMap="update-param">
      <generate table="SPPDETR" by="NOJETRA,MTGKEY,KDKEGUNIT,UNITKEY,NOSPP"/>
    </update>
    <update id="UpdateBySppkegSppdetr" parameterClass="Sppdetr">
      insert into sppkeg(UNITKEY,KDKEGUNIT,NOSPP)
      values (#Unitkey#,#Kdkegunit#,#Nospp#)
    </update>
    <update id="UpdateByDelsbdanaSppdetr" parameterClass="Sppdetr">
      delete SPPDETR where UNITKEY=#Unitkey# and NOSPP=#Nospp#  and MTGKEY=#Mtgkey#  and KDKEGUNIT=#Kdkegunit#
    </update>
    <delete id="DeleteBySppdetr" parameterMap="delete-param">
      <generate table="SPPDETR" by="NOJETRA,MTGKEY,KDKEGUNIT,UNITKEY,NOSPP"/>
    </delete>
    <delete id="DeleteByAllSppdetr" parameterClass="Sppdetr" >
      delete from SPPDETR
      where UNITKEY=#Unitkey# and NOSPP=#Nospp# 
    </delete>
    <delete id="DeleteByKegSppdetr" parameterClass="Sppdetr" >
      delete from SPPDETR
      where UNITKEY=#Unitkey# and NOSPP=#Nospp# and KDKEGUNIT=#Kdkegunit#
      delete from SPPKEG
      where UNITKEY=#Unitkey# and NOSPP=#Nospp# and KDKEGUNIT=#Kdkegunit#
    </delete>
    <select id="BaseQuerySppdetr" parameterClass="Sppdetr" resultMap="return-result">
			select A.KDKEGUNIT,A.MTGKEY,A.NILAI,A.NOJETRA,A.NOSPP,A.UNITKEY
			,B.IDXKODE
			,rtrim(C.KDPER) as KDPER, rtrim(C.NMPER) as NMPER, C.TYPE
			,D.KDPERS
			from SPPDETR A
			left outer join SPP B on A.NOSPP = B.NOSPP and A.UNITKEY = B.UNITKEY
			left outer join MATANGR C on A.MTGKEY = C.MTGKEY
			left outer join JTRNLKAS D on A.NOJETRA = D.NOJETRA
		</select>
    <select id="QueryByAllSppdetr" extends="BaseQuerySppdetr" parameterClass="Sppdetr" resultMap="return-result">
      where B.UNITKEY=#Unitkey# and B.NOSPP=#Nospp# and A.NOJETRA=#Nojetra#
      and case #Parameter.Field#
      when '1' then C.KDPER
      when '2' then C.NMPER
      end like '%'+ #Parameter.Value# + '%'
      order by C.KDPER
    </select>
    <select id="QueryByDetSppdetr" extends="BaseQuerySppdetr" parameterClass="Sppdetr" resultMap="return-result">
      where B.UNITKEY=#Unitkey# and B.NOSPP=#Nospp# and A.NOJETRA='21' 
      and  A.NOJETRA+'-'+A.MTGKEY not in (#Nojetra#+'-'+#Mtgkey#)
      order by C.KDPER
    </select>
    <select id="QueryByPotSppdetr" extends="BaseQuerySppdetr" parameterClass="Sppdetr" resultMap="return-result">
      where B.UNITKEY=#Unitkey# and B.NOSPP=#Nospp# and A.NOJETRA='23' 
      and  A.NOJETRA+'-'+A.MTGKEY not in (#Nojetra#+'-'+#Mtgkey#)
      order by C.KDPER
    </select>
    <select id="QueryByUntilnowSppdetr" parameterClass="Sppdetr" resultMap="return-result-total">
      select S.UNITKEY,S.NOSPP,S.MTGKEY,S.NILAI
      from SPPDETR S
      left outer join SPP SK on SK.UNITKEY=S.UNITKEY and SK.NOSPP=S.NOSPP
      where S.UNITKEY=#Unitkey# and S.NOJETRA=#Nojetra# and <![CDATA[SK.TGSPP <= #Tgspp#]]> and TGLVALID is not null
      and S.NOSPP not in (#Nospp#)
    </select>
    <select id="QueryByUntilnowKegSppdetr" parameterClass="Sppdetr" resultMap="return-result-total">
      select S.UNITKEY,S.NOSPP,S.MTGKEY,case when S.NOJETRA='21' then S.NILAI else -S.NILAI end as NILAI
      from SPPDETR S
      left outer join SPP SK on SK.UNITKEY=S.UNITKEY and SK.NOSPP=S.NOSPP
      where S.UNITKEY=#Unitkey# and <![CDATA[SK.TGSPP <= #Tgspp#]]> and TGLVALID is not null and KDKEGUNIT=#Kdkegunit#
    </select>
    <select id="QueryByFilterSppdetr" parameterClass="Sppdetr" resultMap="return-result-tree">
			select distinct UNITKEY,MTGKEY as KDKEGUNIT,KDPER,NMPER,NILAI,TYPE,#Nospp# as NOSPP,#Nuprgrm# as NUPRGRM from (
			<!--select P.UNITKEY,UN.UNITKEY as MTGKEY, rtrim(isnull(UR.KDUNIT,(select rtrim(numdigit) from struunit where kdlevel='2'))) as KDPER, isnull(UR.NMUNIT,'NON URUSAN') as NMPER,'H' as TYPE,
			NILAI=(select sum(S1.NILAI)
			from SPPDETR S1
			inner join KEGUNIT K1 on S1.UNITKEY=K1.UNITKEY and S1.KDKEGUNIT=K1.KDKEGUNIT
			inner join PGRMUNIT P1 on K1.UNITKEY=P1.UNITKEY and K1.IDPRGRM=P1.IDPRGRM and K1.KDTAHAP=P1.KDTAHAP
			left outer join MPGRM MP1 on P1.IDPRGRM=MP1.IDPRGRM
			left outer join DAFTUNIT UR1 on UR1.UNITKEY=MP1.UNITKEY
			where S1.UNITKEY=#Unitkey# and S1.NOSPP=#Nospp#
			and isnull(UR1.UNITKEY,'')=isnull(UR.UNITKEY,'')
			group by UR1.UNITKEY
			)
			from PGRMUNIT P left outer join MPGRM MP on P.IDPRGRM = MP.IDPRGRM
			left outer join DAFTUNIT UR on MP.UNITKEY = UR.UNITKEY
			left outer join DAFTUNIT UN on P.UNITKEY = UN.UNITKEY
			where P.UNITKEY =#Unitkey# and
			P.IDPRGRM in
			(select IDPRGRM from KEGUNIT where UNITKEY=#Unitkey# and
			KDKEGUNIT in (select KDKEGUNIT from SPPDETR where UNITKEY=#Unitkey# and NOSPP=#Nospp#))
			union
			select P.UNITKEY,P.IDPRGRM as MTGKEY, rtrim(isnull(UR.KDUNIT,(select rtrim(numdigit) from struunit where kdlevel='2')))+rtrim(MP.NUPRGRM) as KDPER, MP.NMPRGRM as NMPER,'H' as TYPE,
			NILAI=(select sum(S1.NILAI)
			from SPPDETR S1
			inner join KEGUNIT K1 on S1.UNITKEY=K1.UNITKEY and S1.KDKEGUNIT=K1.KDKEGUNIT
			inner join PGRMUNIT P1 on K1.UNITKEY=P1.UNITKEY and K1.IDPRGRM=P1.IDPRGRM and K1.KDTAHAP=P1.KDTAHAP
			where S1.UNITKEY=#Unitkey# and S1.NOSPP=#Nospp#
			and P1.IDPRGRM=P.IDPRGRM
			group by P1.UNITKEY,P1.IDPRGRM
			)
			from PGRMUNIT P left outer join MPGRM MP on P.IDPRGRM = MP.IDPRGRM
			left outer join DAFTUNIT UR on MP.UNITKEY = UR.UNITKEY
			left outer join DAFTUNIT UN on P.UNITKEY = UN.UNITKEY
			where P.UNITKEY =#Unitkey# and
			P.IDPRGRM in
			(select IDPRGRM from KEGUNIT where UNITKEY=#Unitkey# and
			KDKEGUNIT in (select KDKEGUNIT from SPPDETR where UNITKEY=#Unitkey# and NOSPP=#Nospp#))
			union-->
      select distinct K.UNITKEY,K.KDKEGUNIT as MTGKEY, rtrim(isnull(UR.KDUNIT,(select rtrim(numdigit) from struunit where kdlevel='2')))+rtrim(MP.NUPRGRM)+rtrim(MK.NUKEG) as KDPER, MK.NMKEGUNIT as NMPER,'D' as TYPE,
      NILAI=(select sum(NILAI) from SPPDETR where UNITKEY=#Unitkey# and NOSPP=#Nospp# and KDKEGUNIT=K.KDKEGUNIT)
      from KEGUNIT K
      left outer join MKEGIATAN MK on MK.KDKEGUNIT=K.KDKEGUNIT
      left outer join MPGRM MP on MK.IDPRGRM = MP.IDPRGRM
      left outer join DAFTUNIT UR on MP.UNITKEY = UR.UNITKEY
      left outer join DAFTUNIT UN on K.UNITKEY = UN.UNITKEY
      where (K.UNITKEY =#Unitkey# or k.UNITKEY IN (SELECT UNITKEYUK FROM DAFTUNITUK WHERE UNITKEYSKPD = #Unitkey#)) and K.KDKEGUNIT in (select KDKEGUNIT from SPPDETR where UNITKEY=#Unitkey# and NOSPP=#Nospp#)
      )A
      where (UNITKEY =#Unitkey# or UNITKEY IN (SELECT UNITKEYUK FROM DAFTUNITUK WHERE UNITKEYSKPD = #Unitkey#))
      and case #Parameter.Field#
      when '1' then KDPER
      when '2' then NMPER
      end like '%'+ #Parameter.Value# + '%'
      order by KDPER
    </select>
    <select id="QueryByFilter2Sppdetr" parameterClass="Sppdetr" resultMap="return-result-tree">
      select distinct UNITKEY,MTGKEY as KDKEGUNIT,KDPER,NMPER,NILAI,TYPE,#Nospp# as NOSPP,#Nuprgrm# as NUPRGRM from (
      select distinct K.UNITKEY,K.KDKEGUNIT as MTGKEY, rtrim(isnull(UR.KDUNIT,(select rtrim(numdigit) from struunit where kdlevel='2')))+rtrim(MP.NUPRGRM)+rtrim(MK.NUKEG) as KDPER, MK.NMKEGUNIT as NMPER,'D' as TYPE,
      NILAI=(select sum(NILAI) from SPPDETR where UNITKEY=#Unitkey# and NOSPP=#Nospp# and KDKEGUNIT=K.KDKEGUNIT)
      from KEGUNIT K
      left outer join MKEGIATAN MK on MK.KDKEGUNIT=K.KDKEGUNIT
      left outer join MPGRM MP on MK.IDPRGRM = MP.IDPRGRM
      left outer join DAFTUNIT UR on MP.UNITKEY = UR.UNITKEY
      left outer join DAFTUNIT UN on K.UNITKEY = UN.UNITKEY
      where (K.UNITKEY =#Unitkey# or k.UNITKEY IN (SELECT UNITKEYUK FROM DAFTUNITUK WHERE UNITKEYSKPD = #Unitkey#)) and K.KDKEGUNIT in (select KDKEGUNIT from SPPKEG where UNITKEY=#Unitkey# and NOSPP=#Nospp#)
      )A
      where (UNITKEY =#Unitkey# or UNITKEY IN (SELECT UNITKEYUK FROM DAFTUNITUK WHERE UNITKEYSKPD = #Unitkey#))
      and case #Parameter.Field#
      when '1' then KDPER
      when '2' then NMPER
      end like '%'+ #Parameter.Value# + '%'
      order by KDPER
    </select>
    <select id="QueryByMtgsppSppdetr" parameterClass="Sppdetr" resultMap="return-result-del">
      select MTGKEY from Sppdetrdana where UNITKEY=#Unitkey# and NOSPP=#Nospp# and MTGKEY=#Mtgkey# and KDKEGUNIT=#Kdkegunit#
    </select>
    <select id="LoadByTotalRekSppdetr" parameterClass="Sppdetr" resultMap="return-result-total">
      <![CDATA[
      select B.KDPER, B.NMPER, B.MTGKEY, sum(case A.NOJETRA when '21' then A.NILAI else -A.NILAI end) AS NILAI
      from SPPDETR A
      left join SPP S ON A.UNITKEY = S.UNITKEY AND A.NOSPP = S.NOSPP
      left join MATANGR B on A.MTGKEY = B.MTGKEY
      where A.UNITKEY=#Unitkey# and A.MTGKEY=#Mtgkey# and A.KDKEGUNIT=#Kdkegunit#
      and S.IDXSKO in (select IDXSKO from SKO where UNITKEY=#Unitkey#
      and TGLSKO <= (select TGLSKO from SKO where UNITKEY=#Unitkey#
        and IDXSKO = #Idxsko#) and TGLVALID is not NULL)
        and S.TGSPP <= #Tgspp# and S.Nospp <> #Nospp# and S.TGLVALID is not NULL
      group BY B.KDPER, B.NMPER, B.MTGKEY
      ]]>
    </select>
    <!--<select id="LoadByTotbaSppdetr" parameterClass="Sppdetr" resultMap="return-result-totba">
      select
      --><!--totba = isnull((select sum(nilai) Tot from BERITADETR where UNITKEY=#Unitkey# and NOBA=A.NOBA),0)
      ,totspp = isnull((select sum(nilai)+10000 Tot from SPPDETR where UNITKEY=#Unitkey# and NOSPP=A.NOSPP),0),--><!--
      sisaba=isnull(isnull((select sum(nilai) Tot from BERITADETR where UNITKEY=#Unitkey# and NOBA=A.NOBA),0)-isnull((select sum(nilai)+#Nilai# Tot from SPPDETR where UNITKEY=#Unitkey# and NOSPP=A.NOSPP),0),0)
      from SPPBA A
      left join SPP sa on sa.NOSPP=a.NOSPP and sa.UNITKEY=a.UNITKEY
      where A.UNITKEY=#Unitkey# and A.NOBA=#Noba# and A.NOSPP=#Nospp#
    </select>-->
    <select id="LoadByPKSppdetr" extends="BaseQuerySppdetr" parameterClass="Sppdetr" resultMap="return-result">
			where A.MTGKEY=#Mtgkey# and A.KDKEGUNIT=#Kdkegunit# and A.UNITKEY=#Unitkey# and A.NOSPP=#Nospp# and A.NOJETRA=#Nojetra#
		</select>
    <procedure id="ExecValidateSppTot2" parameterMap="validate-tot-param">
      WSP_SISASPDSPPKEG
    </procedure>
    <procedure id="ExecValidateSppRekDpa2" parameterMap="validate-rek-param">
      WSP_VALIDATIONSPP_REK
    </procedure>
    <procedure id="ExecValidateSppRekSpd2" parameterMap="validate-rek-param">
      WSP_VALIDATIONSPP_REK_SPD
    </procedure>
    <procedure id="ExecValidateBerita" parameterMap="validate-berita-param">
      WSP_VALIDATIONBERITA
    </procedure>
    <procedure id="ExecValidateKontrak1" parameterMap="validate-kontrak-param">
      WSP_VALIDATIONKONTRAK1
    </procedure>
    <procedure id="ExecValidateKontrak2" parameterMap="validate-kontrak-param2">
      WSP_VALIDATIONKONTRAK2
    </procedure>
  </statements>
  <parameterMaps>
    <parameterMap id="insert-param" class="Sppdetr">
      <parameter property="Nilai" column="NILAI"/>
      <parameter property="Nojetra" column="NOJETRA"/>
      <parameter property="Mtgkey" column="MTGKEY"/>
      <parameter property="Kdkegunit" column="KDKEGUNIT"/>
      <parameter property="Unitkey" column="UNITKEY"/>
      <parameter property="Nospp" column="NOSPP"/>
    </parameterMap>
    <parameterMap id="update-param" extends="insert-param" class="Sppdetr">
    </parameterMap>
    <parameterMap id="delete-param" class="Sppdetr">
			<parameter property="Nojetra" column="NOJETRA"/>
      <parameter property="Mtgkey" column="MTGKEY"/>
      <parameter property="Kdkegunit" column="KDKEGUNIT"/>
      <parameter property="Unitkey" column="UNITKEY"/>
      <parameter property="Nospp" column="NOSPP"/>
    </parameterMap>
    <parameterMap id="transfer-param" class="Sppdetr">
      <parameter property="Unitkey" column="unitkey"/>
      <parameter property="Mtgkey" column="mtgkey"/>
      <parameter property="Tgspp" column="tglspp"/>
    </parameterMap>
    <parameterMap id="validate-tot-param" class="Sppdetr">
      <parameter property="Unitkey" column="unitkey"/>
      <parameter property="Tglsko" column="tglsko"/>
      <parameter property="Kdkegunit" column="kdkegunit"/>
    </parameterMap>
    <parameterMap id="validate-rek-param" class="Sppdetr">
      <parameter property="Unitkey" column="unitkey"/>
      <parameter property="Kdper" column="kdper"/>
      <parameter property="Kdkegunit" column="kdkegunit"/>
      <parameter property="Tgspp" column="tglspp"/>
      <parameter property="Kdtahap" column="kdtahap"/>
    </parameterMap>
    <parameterMap id="validate-berita-param" class="Sppdetr">
      <parameter property="Unitkey" column="unitkey"/>
      <parameter property="Kdkegunit" column="kdkegunit"/>
		<parameter property="Mtgkey" column="mtgkey"/>
      <parameter property="Noba" column="noba"/>
      <parameter property="Nospp" column="nospp"/>
		<parameter property="Kdtahap" column="kdtahap"/>
    </parameterMap>
    <parameterMap id="validate-kontrak-param" class="Sppdetr">
      <parameter property="Unitkey" column="unitkey"/>
      <parameter property="Kdkegunit" column="kdkegunit"/>
      <parameter property="Kdper" column="kdper"/>
      <parameter property="Nokontrak" column="nokon"/>
    </parameterMap>
    <parameterMap id="validate-kontrak-param2" class="Sppdetr">
      <parameter property="Unitkey" column="unitkey"/>
      <parameter property="Kdkegunit" column="kdkegunit"/>
      <parameter property="Kdper" column="kdper"/>
      <parameter property="Nokontrak" column="nokon"/>
      <parameter property="Trw" column="kdbulan"/>
    </parameterMap>
  </parameterMaps>
</sqlMap>
